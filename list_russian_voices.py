"""–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≥–æ–ª–æ—Å–æ–≤ ElevenLabs (–≤—Å–µ –∏ —Ç–æ–ª—å–∫–æ —Ä—É—Å—Å–∫–∏–µ)."""

import os
from typing import Any, Dict, List
import requests
from dotenv import load_dotenv
import config
from logging_setup import setup_logging

load_dotenv()
logger = setup_logging(config.LOG_LEVEL)

ELEVEN_API_KEY = os.getenv("ELEVENLABS_API_KEY") or getattr(config, "elevenlabs_api_key", None)
if not ELEVEN_API_KEY:
    raise ValueError("ELEVENLABS_API_KEY is not set (env or config)")

url = "https://api.elevenlabs.io/v1/voices"
headers = {"xi-api-key": ELEVEN_API_KEY}

print("üîç –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ–ª–æ—Å–æ–≤ ElevenLabs...")

try:
    response = requests.get(url, headers=headers, timeout=20)
    response.raise_for_status()
except Exception as exc:
    logger.error("Failed to fetch voices: %r", exc)
    raise SystemExit(1)

data = response.json()
voices: List[Dict[str, Any]] = data.get("voices", [])

# –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫
print(f"\n–í—Å–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤: {len(voices)}\n")
print(f"{'–ò–º—è':20} | {'–ü–æ–ª':8} | {'–Ø–∑—ã–∫':8} | {'–ö–∞—Ç–µ–≥–æ—Ä–∏—è':10} | voice_id")
print("-" * 80)
for v in voices:
    name = v.get("name")
    vid = v.get("voice_id")
    labels = v.get("labels", {}) or {}
    gender = labels.get("gender", "‚Äî")
    category = v.get("category", "‚Äî")
    lang = labels.get("language", "‚Äî")
    print(f"{name:20} | {gender:8} | {lang:8} | {category:10} | {vid}")

russian_voices = [
    v for v in voices
    if (v.get("labels", {}) or {}).get("language", "").lower() in ("ru", "russian", "—Ä—É—Å—Å–∫–∏–π")
]

print("\n–†—É—Å—Å–∫–∏–µ –≥–æ–ª–æ—Å–∞:")
if not russian_voices:
    print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä—É—Å—Å–∫–∏—Ö –≥–æ–ª–æ—Å–æ–≤.")
else:
    print(f"(–≤—Å–µ–≥–æ: {len(russian_voices)})\n")
    print(f"{'–ò–º—è':20} | {'–ü–æ–ª':8} | {'–Ø–∑—ã–∫':8} | {'–ö–∞—Ç–µ–≥–æ—Ä–∏—è':10} | voice_id")
    print("-" * 80)
    for v in russian_voices:
        name = v.get("name")
        vid = v.get("voice_id")
        labels = v.get("labels", {}) or {}
        gender = labels.get("gender", "‚Äî")
        category = v.get("category", "‚Äî")
        lang = labels.get("language", "‚Äî")
        print(f"{name:20} | {gender:8} | {lang:8} | {category:10} | {vid}")
